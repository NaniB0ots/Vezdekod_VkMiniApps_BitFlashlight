{"version":3,"sources":["panels/BitFlashlight.js","App.js","index.js"],"names":["timer","TeamCard","props","state","is_available","checkboxList","is_started","initFlashlight","console","log","bridge","send","then","data","catch","error","number","this","item","setInterval","setState","clearInterval","start_dance","activePanel","id","status","className","type","defaultChecked","onChange","handleChangeChk","onClick","handleStartButton","mode","React","Component","App","viewWidth","useAdaptivity","header","separator","spaced","ViewWidth","MOBILE","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c62a6451.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Group,\r\n    Div,\r\n    Panel,\r\n    PanelHeader,\r\n    View, PanelHeaderContent, Checkbox, Button\r\n} from \"@vkontakte/vkui\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport BitFlashlight from \"./BitFlashlight.css\"\r\n\r\nlet timer;\r\n\r\nclass TeamCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            is_available: 123,\r\n            checkboxList: [true, true, true, true, true, true, true, true],\r\n            is_started: false\r\n        };\r\n        this.initFlashlight();\r\n    }\r\n\r\n\r\n    initFlashlight() {\r\n        console.log('Получение доступа...')\r\n        bridge.send(\"VKWebAppFlashGetInfo\").then(\r\n            data => {\r\n                console.log(data);\r\n                console.log('Доступ получен');\r\n                this.state.is_available = data.is_available\r\n                return true;\r\n            }\r\n        ).catch(\r\n            error => {\r\n                console.log(error);\r\n                return false;\r\n            }\r\n        );\r\n    }\r\n\r\n    handleChangeChk(number) {\r\n        this.state.checkboxList[number] = !this.state.checkboxList[number]\r\n    }\r\n\r\n\r\n    start_dance() {\r\n        console.log('Начали!')\r\n        let item = 0;\r\n        timer = setInterval(() => {\r\n\r\n            if (this.state.checkboxList[item]) {\r\n                bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": 1});\r\n                console.log(`Фонарь ${item} включен`);\r\n            } else {\r\n                bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": 0});\r\n                console.log(`Фонарь ${item} выключен`);\r\n            }\r\n\r\n            item++;\r\n\r\n            if (item === 8) {\r\n                item = 0\r\n            }\r\n\r\n        }, 1000);\r\n    }\r\n\r\n    handleStartButton(is_started) {\r\n        this.setState({\r\n            checkboxList: this.state.checkboxList,\r\n            is_started: !is_started\r\n        })\r\n        if (!is_started) {\r\n            this.start_dance()\r\n        } else {\r\n\r\n            clearInterval(timer);\r\n            console.log('Остановлено!')\r\n            bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": 0});\r\n            console.log(`Фонарь выключен`);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>\r\n                        BitFlashlight\r\n                        <PanelHeaderContent\r\n                            status={\r\n                                \"Created by NaniB0ots\"\r\n                            }\r\n                        >\r\n                        </PanelHeaderContent>\r\n                    </PanelHeader>\r\n\r\n                    <Group>\r\n                        <Div>\r\n                            <input className={\"checkbox\"} type=\"checkbox\" defaultChecked={this.state.checkboxList[0]}\r\n                                   onChange={() => this.handleChangeChk(0)}/>\r\n                            <input className={\"checkbox\"} type=\"checkbox\" defaultChecked={this.state.checkboxList[1]}\r\n                                   onChange={() => this.handleChangeChk(1)}/>\r\n                            <input className={\"checkbox\"} type=\"checkbox\" defaultChecked={this.state.checkboxList[2]}\r\n                                   onChange={() => this.handleChangeChk(2)}/>\r\n                            <input className={\"checkbox\"} type=\"checkbox\" defaultChecked={this.state.checkboxList[3]}\r\n                                   onChange={() => this.handleChangeChk(3)}/>\r\n                            <input className={\"checkbox\"} type=\"checkbox\" defaultChecked={this.state.checkboxList[4]}\r\n                                   onChange={() => this.handleChangeChk(4)}/>\r\n                            <input className={\"checkbox\"} type=\"checkbox\" defaultChecked={this.state.checkboxList[5]}\r\n                                   onChange={() => this.handleChangeChk(5)}/>\r\n                            <input className={\"checkbox\"} type=\"checkbox\" defaultChecked={this.state.checkboxList[6]}\r\n                                   onChange={() => this.handleChangeChk(6)}/>\r\n                            <input className={\"checkbox\"} type=\"checkbox\" defaultChecked={this.state.checkboxList[7]}\r\n                                   onChange={() => this.handleChangeChk(7)}/>\r\n\r\n                        </Div>\r\n\r\n\r\n                        <Div>\r\n                            {!this.state.is_started ?\r\n                                <Button onClick={() => this.handleStartButton(this.state.is_started)}\r\n                                        mode=\"commerce\">Старт</Button>\r\n                                :\r\n                                <Button onClick={() => this.handleStartButton(this.state.is_started)}\r\n                                        mode=\"destructive\">Стоп</Button>\r\n                            }\r\n                        </Div>\r\n                    </Group>\r\n\r\n                </Panel>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeamCard;","import React, {useState, useEffect} from 'react';\nimport {\n    AdaptivityProvider,\n    AppRoot,\n    SplitLayout,\n    SplitCol,\n    useAdaptivity,\n    PanelHeader, ViewWidth\n} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport BitFlashlight from './panels/BitFlashlight'\n\nconst App = () => {\n    const {viewWidth} = useAdaptivity();\n    return (\n        <AdaptivityProvider>\n            <AppRoot>\n                <SplitLayout header={<PanelHeader separator={false}/>}>\n                    <SplitCol spaced={viewWidth > ViewWidth.MOBILE}>\n                        <BitFlashlight/>\n                    </SplitCol>\n                </SplitLayout>\n\n            </AppRoot>\n        </AdaptivityProvider>\n    )\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}